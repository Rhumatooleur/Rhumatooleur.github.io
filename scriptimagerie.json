document.getElementById("formatImagerieButton").addEventListener("click", function() {
    var inputText = document.getElementById("inputImagerieText").value;

    // Function to remove personal information
    function removePersonalInfo(text) {
        // Remove expressions in the format "NOMENMAJUSCULE Prenomaveclapremièrelettreenmajuscule - JJ/MM/AAAA"
        return text.replace(/\b[A-ZÀ-ÖØ-Ý]+ [A-ZÀ-ÖØ-Ý][a-zà-öø-ÿ]+ - \d{2}\/\d{2}\/\d{4}\b/g, '');
    }

    // Function to remove unwanted sections
    function removeUnwantedSection(text) {
        return text.replace(/Le règlement par chèque est accepté\s+\S+\s+\S+\s+\d{2}\/\d{2}\/\d{4}/, '');
    }

    // Function to format the imagery text
    function formatImagerieText(text) {
        // Remove personal information
        text = removePersonalInfo(text);

        // Remove unwanted sections from the input text
        text = text.replace(/DEPARTEMENT D’IMAGERIE MEDICALE[\s\S]*?Le règlement par chèque est accepté/, '');
        text = removeUnwantedSection(text);

        // Find the title
        var titleMatch = text.match(/(?:\b[A-ZÀ-ÖØ-Ý]+\b[\s]+){2,}([A-ZÀ-ÖØ-Ý][a-zà-öø-ÿ\s]+)(?=\s(?:Canon|Aquillion|Prime|SP))/);
        var titleText = titleMatch ? titleMatch[0].trim() : '';

        // Remove the last word from the title
        titleText = titleText.replace(/\s\S+$/, '');

        // Find the section between "RESULTAT" and "CONCLUSION"
        var resultatMatch = text.match(/RESULTAT\s*([\s\S]*?)(?=CONCLUSION)/i);
        var resultatText = resultatMatch ? resultatMatch[1].trim() : '';

        // Find the conclusion section
        var conclusionMatch = text.match(/CONCLUSION\s*([\s\S]*?)(?=Bien confraternellement)/i);
        var conclusionText = conclusionMatch ? conclusionMatch[1].trim() : '';

        // Find the images info section
        var imagesInfoMatch = text.match(/Les images radiologiques de cet examen sont consultables sur le site\s*:\s*(https:\/\/[\s\S]*?Identifiant\s*:\s*\S+\s*Mot de passe\s*:\s*\S+)/i);
        var imagesInfoText = imagesInfoMatch ? imagesInfoMatch[1].trim() : '';

        // Phrase for images information
        var imagesInfoPhrase = "Les images radiologiques de cet examen sont consultables sur le site :";

        // Construction of the formatted text
        var formattedText = "";

        // Append the title to formatted text
        if (titleText) {
            formattedText += "<p><strong><u>" + titleText + "</u></strong></p>";
        }

        // Append the result section to formatted text
        if (resultatText) {
            formattedText += "<p>" + resultatText.replace(/\n{2,}/g, "\n").replace(/\n/g, "<br>") + "</p>";
        }

        // Append the conclusion section to formatted text
        if (conclusionText) {
            formattedText += "<p><br><u>Conclusion</u><br>" + conclusionText.replace(/\n{2,}/g, "\n").replace(/\n/g, "<br>") + "</p>";
        }

        // Append the images info section to formatted text in italic
        if (imagesInfoText) {
            formattedText += "<p><br><i>" + imagesInfoPhrase + "</i><br><i>" + imagesInfoText.replace(/\n/g, "<br>") + "</i></p>";
        }

        return formattedText;
    }

    var formattedText = formatImagerieText(inputText);

    document.getElementById("FormattedImagerieText").innerHTML = formattedText;

    // Copy formatted text to clipboard
    navigator.clipboard.writeText(formattedText.replace(/<br>/g, '\n').replace(/<[^>]+>/g, ''));

    // Format second zone text removing multiple line breaks
    var formattedSecondZoneText = removeMultipleLineBreaks(formattedText);

    document.getElementById("SecondFormattedImagerieText").innerHTML = formattedSecondZoneText;
});

// Function to remove multiple line breaks
function removeMultipleLineBreaks(text) {
    return text.replace(/\n{2,}/g, '\n');
}
